generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Producto {
  idProducto    Int           @id @default(autoincrement())
  nombre        String        @unique(map: "uniqueName") @db.VarChar(30)
  descripcion   String        @db.VarChar(255)
  estado        estado
  esAlcoholica  Boolean?
  esVegetariana Boolean?
  esVegana      Boolean?
  tipo          tipo?
  esSinGluten   Boolean?
  Sugerencias   Sugerencias[]
}

model PoliticasRestaurante {
  idPolitica                      Int    @id @default(autoincrement())
  minutosTolerancia               Int    @default(15)
  horarioMaximoDeReserva          String @db.VarChar
  horasDeAnticipacionParaCancelar Int    @default(6)
  horasDeAnticipacionParaReservar Int    @default(6)
  limiteDeNoAsistencias           Int    @default(3)
  cantDiasDeshabilitacion         Int    @default(90)
  porcentajeIVA                   Int    @default(21)
  montoCubiertosPorPersona        Int    @default(5)
}

model InformacionRestaurante {
  idInformacion        Int    @id @default(autoincrement())
  nombreRestaurante    String @db.VarChar
  direccionRestaurante String @db.VarChar
  razonSocial          String @db.VarChar
  telefonoContacto     String @db.VarChar
}

model Horarios {
  diaSemana     Int      @id @default(autoincrement())
  horaApertura  DateTime @db.Time
  horaCierre    DateTime @db.Time
}

model Mozo {
  nombreUsuario String @unique(map: "nombreUsuario") @db.VarChar
  contrasenia   String @db.VarChar
  nombre        String @db.VarChar
  apellido      String @db.VarChar
  DNI           Int
  email         String @db.VarChar
  telefono      String @db.VarChar
  idMozo        String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
}

model Mesa {
  nroMesa   Int        @id @default(autoincrement())
  capacidad Int
  estado    estadoMesa
}

model Sugerencias {
  fechaDesde DateTime @db.Date
  fechaHasta DateTime @db.Date
  idProducto Int
  Producto   Producto @relation(fields: [idProducto], references: [idProducto], onDelete: NoAction, onUpdate: NoAction, map: "producto_sugerencia")

  @@id([idProducto, fechaDesde], map: "Sugerencias_PK")
}

model Novedad {
  idNovedad   Int      @id(map: "Novedades_pkey") @default(autoincrement())
  titulo      String   @unique(map: "titulo_unique") @db.VarChar
  descripcion String   @db.VarChar
  fechaInicio DateTime @db.Date
  fechaFin    DateTime @db.Date
}

enum estado {
  Disponible
  No_Disponible @map("No Disponible")
}

enum tipo {
  Plato_Principal  @map("Plato Principal")
  Entrada
  Postre
  EMPTY_ENUM_VALUE @map("")
}

enum estadoMesa {
  Libre
  Ocupado
  Reservado
}
